.container {
  padding: 24px;
  background: linear-gradient(rgb(0, 0, 0), rgb(10, 23, 52));
  height: 100%;
}

.layout {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
}

.bgPattern {
  opacity: 0.07;
  background-image: linear-gradient(#444cf7 1px, transparent 1px),
    linear-gradient(to right, #444cf7 1px, transparent 1px);
  background-size: 15px 15px;
  height: 642px;
  width: 100%;
  position: absolute;
  pointer-events: none;
  z-index: 1;

  /* To avoid fades to create horizontal scrolling */
  overflow: hidden;

  animation: pulse 4s ease infinite;
}

.fade {
  /* Relative to `.bgPattern */
  position: absolute;
  z-index: 2;
}

.sideFade {
  width: 400px;
  top: -40px;
  bottom: -40px;
}

.baseFade {
  width: 100%;
}

.leftFade {
  left: 0;
  background: linear-gradient(to left, transparent 0%, rgb(0, 0, 0) 100%);
}

.rightFade {
  right: 0;
  background: linear-gradient(to left, rgb(0, 0, 0) 0%, transparent 100%);
}

.topFade {
  top: -40px;
  height: 200px;
  background: linear-gradient(black, 70%, transparent 100%);
}

.bottomFade {
  bottom: 0;
  height: 200px;
  background: linear-gradient(transparent, 50%, rgb(0, 12, 39) 100%);
}

.connectingLines {
  display: flex;
  position: relative;
}

.connectingLineContainer {
  width: 100%;
}

.leftConnectingLineContainer {
  margin-right: -20px;
}

.rightConnectingLineContainer {
  rotate: 180deg;
  transform-origin: center;
  margin-top: -5px;
}

.connectingLinePath {
  stroke-width: 2px;
  stroke-opacity: 0.1;
}

.connectingLine {
  /* Note: this has to closely related to the same path in the `ConnectingLine` svg path */
  offset-path: path("M30,1 H187 L218,35");
  position: absolute;
  opacity: 0;
  animation-fill-mode: forwards;
  width: 10px;
  height: 2px;
  border-radius: 50%;
  background: linear-gradient(
    to right,
    rgba(255, 255, 255, 0.5) 10%,
    rgba(255, 255, 255, 1) 100%
  );
  box-shadow: 0 0 0.6em #0dfcc4, 0 0 0.8em #17fcc7;
  transform: translate3d(0, 0, 0);
}

.leftConnectingLine {
  animation: move 4s infinite ease-out;
  animation-delay: 6s;
}

.rightConnectingLine {
  animation: move 4s infinite ease-out;
  animation-delay: 6s;
}

.usageGaugeContainer {
  position: absolute;
  bottom: -195px;
}

.leftUsageGaugeContainer {
  left: -30px;
}

.rightUsageGaugeContainer {
  right: -30px;
}

@keyframes move {
  0% {
    opacity: 0;
    offset-distance: 0%;
  }
  1% {
    opacity: 1;
  }
  20% {
    offset-distance: 100%;
  }

  30% {
    opacity: 0;
  }

  100% {
    offset-distance: 100%;
    opacity: 0;
  }
}

@keyframes pulse {
  0%,
  100% {
    opacity: 0.07;
  }

  50% {
    opacity: 0.12;
  }
}
